// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MapLinks renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={true}
  onModalHide={[Function]}
  onRequestClose={[MockFunction]}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#464646",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={true}
    onModalHide={[Function]}
    pointerEvents="box-none"
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "white",
            "borderRadius": 10,
            "maxHeight": 800.4,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#ECF2F8",
              "borderColor": "transparent",
              "borderWidth": 1,
              "padding": 15,
            },
            undefined,
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#464646",
                "fontSize": 16,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Directions
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#ACBBCB",
                "fontSize": 12,
                "marginTop": 10,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Open bar location in one of the following apps:
        </Text>
      </View>
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View />
      </RCTScrollView>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderColor": "transparent",
            "borderTopColor": "#ECF2F8",
            "borderWidth": 1,
            "justifyContent": "center",
            "opacity": 1,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#BBC4CC",
                "fontSize": 16,
                "fontWeight": "bold",
              },
              undefined,
            ]
          }
        >
          Cancel
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
